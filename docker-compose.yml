
# One service: `sim`. It builds the image and runs the Python entrypoint.
# Env vars are set to sensible boolean-friendly defaults (true/false, yes/no, 1/0 all work).
# You can override anything at run time with `-e KEY=value`, or by editing .env / env_file.

services:
  sim:
    build:
      context: .
      dockerfile: Dockerfile
    image: blackjack-sim:latest

    # If you keep your code in ./src on the host, mount it inside the container for fast iteration.
    # Comment this out if you prefer the baked image only.
    volumes:
      - ./src:/app/src:rw

    working_dir: /app

    # Default command; you typically override with: docker compose run --rm sim python -u src/main.py
    command: ["python", "-u", "src/main.py"]

    # Compose passes these environment values as strings. In the program we parse booleans robustly.
    environment:
      # --- Core run size / randomness ---
      NUM_HANDS: "10000"
      SEED: "8"

      # --- Shoe & rules (US hole-card peek) ---
      NUM_DECKS: "8"
      DEALER_HITS_SOFT_17: "true"      # true = H17, false = S17
      BLACKJACK_PAYOUT: "1.5"          # 1.5 = 3:2, 1.2 = 6:5 etc.

      # --- Splits / doubles / insurance ---
      DAS: "true"                      # Double After Split allowed by rules
      ALLOW_DOUBLE_AFTER_SPLIT: "true" # Strategy may actually double after split (if you want to allow it)
      DISABLE_DOUBLE: "false"          # For testing: force no doubles anywhere
      SPLIT_ACES_ONE: "true"           # Only one card to split Aces
      MAX_SPLITS: "1"

      INSURANCE: "true"
      INSURANCE_AUTO: "true"
      INSURANCE_FRACTION: "0.5"
      INSURANCE_PAYOUT: "2.0"

      # --- Shoe model ---
      CONTINUOUS_SHOE: "true"
      RESHUFFLE_PENETRATION: "0.50"    # reshuffle when 50% of shoe is gone

      # --- DP / caching / perf ---
      DP_DEPTH: "3"
      DP_LRU_MAXSIZE: "400000"
      SLICE_HANDS: "1000"              # clear DP cache every N hands

      # --- Policy selection ---
      ACTION_TEMP: "0.0"               # 0 = argmax, >0 = softmax temperature
      TIE_BREAK: "stand"               # stand|double|hit|split|random
      TIE_EPS: "1e-9"

      # --- Betting (linear mapping of edge -> bet) ---
      BANKROLL: "10000"
      TABLE_MIN: "1"
      TABLE_MAX: "1"                   # Set >TABLE_MIN for variable bet sizing
      BET_UNIT: "1"
      EDGE_MIN: "-0.20"                # map EDGE_MIN..EDGE_MAX to [TABLE_MIN..TABLE_MAX]
      EDGE_MAX: "0.20"

      # --- Progress printing ---
      PROGRESS_EVERY: "5000"

    # If you prefer, you can put these in a .env file and uncomment below:
    # env_file:
    #   - ./.env
